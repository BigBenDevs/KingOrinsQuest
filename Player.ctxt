#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Player\ here.\r\n\ \r\n\ @author\ (Benjamin\ Presley),\ Anthony\ Neeser\ \r\n\ @version\ (5/10/2018)\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n\ \ Sets\ playable\ character\ images,\ and\ scales\ to\ proper\ size..\ \r\n
comment10.params=
comment10.target=void\ checkWeapon()
comment10.text=\r\n\ Checks\ which\ weapon\ can\ be\ used.\r\n\ @author\ Anthony\ Neeser\ \r\n
comment11.params=
comment11.target=void\ shoot()
comment11.text=\r\n\ Handles\ projectile\ use\ by\ player.\ Checks\ for\ mouse\ clicks\ in\ the\ world,\ converts\ click\ location\ to\ \r\n\ projectile\ rotation\ to\ send\ projectiles\ in\ specific\ direction.\ \r\n\ @author\ \ Anthony\ Neeser\r\n
comment12.params=
comment12.target=boolean\ dialog()
comment12.text=\r\n\ Checks\ if\ shop\ dialog\ is\ open.\ \r\n\ @author\ Anthony\ Neeser\r\n
comment13.params=
comment13.target=void\ newState()
comment13.text=\r\n\ State\ change\ of\ player\ will\ call\ intialize\ images\ to\ set\ new\ images;\r\n\ @author\ Anthony\ Neeser\r\n
comment14.params=state
comment14.target=void\ initializeImages(java.lang.String)
comment14.text=\r\n\ Called\ to\ intialized\ images\ based\ on\ state\ of\ character\ and\ what\ items\ he\ has.\ \r\n\ @author\ Anthony\ Neeser\r\n
comment15.params=
comment15.target=void\ reset()
comment15.text=\r\n\ Reset\ allows\ player\ to\ reset\ game\ to\ initial\ values.\ \r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ Player\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment3.params=
comment3.target=void\ infoBar()
comment3.text=\r\n\ Tracks\ important\ information,\ such\ as\ health,\ armor,\ and\ mana.\r\n\ @author\ Anthony\ Neeser\r\n
comment4.params=
comment4.target=void\ checkKeys()
comment4.text=\r\n\ Method\ checks\ for\ key\ presses\ to\ move\ character\ or\ interact\ with\ world.\r\n\ @author\ Benjamin\ Presley,\ Anthony\ Neeser\r\n
comment5.params=
comment5.target=void\ stopAtBarrier()
comment5.text=\r\n\ Method\ identifies\ if\ player\ is\ touching\ barrier\ object\ and\ prevents\ player\r\n\ from\ moving\ further\ in\ the\ direction\ of\ the\ barrier.\r\n
comment6.params=
comment6.target=void\ enterDoor()
comment6.text=\r\n\ Identifies\ when\ the\ player\ has\ made\ contact\ with\ the\ door\ entrance\ and\ transfers\ the\ \r\n\ player\ to\ the\ appropriate\ world.\ \ Also\ starts\ the\ playing\ of\ the\ music.\r\n
comment7.params=
comment7.target=void\ transferWorlds()
comment7.text=\r\n\ The\ transferWorlds\ method\ is\ used\ to\ detect\ when\ a\ player\ is\ at\ the\ edge\ of\ the\ screen,\ and\ store\ needed\ data\ for\ \r\n\ transfering\ to\ the\ appropriate\ world.\ \ This\ information\ is\ used\ by\ the\ new\ world\ to\ determine\ the\ player\ location\r\n\ after\ creation.\r\n
comment8.params=
comment8.target=void\ spawnWorld()
comment8.text=\r\n\ The\ spawnWorld\ method\ takes\ the\ spawn\ variable\ from\ MainWorld\ and\ uses\ it\ to\ create\ the\ appropriate\ world.\r\n
comment9.params=
comment9.target=void\ dying()
comment9.text=\r\n\ This\ controls\ the\ action\ taken\ when\ a\ player\ dies.\r\n\ Resets\ variables\ to\ 0,\ and\ creates\ the\ ending\ dialog\ with\ instructions\ for\ restarting\ game.\r\n
numComments=16
